@*@model IEnumerable<TesteNET.Models.Categoria>*@

@model PagedList.IPagedList<TesteNET.Models.Categoria>
@using PagedList.Mvc;
@using System.Configuration;

@{
    //Controller da Página
    string controller = HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString();
    //Nome do controller
    string controllerName = "Categoria";
    //Label do controller
    string controllerLabel = "Categoria";
    //Título da Página
    ViewBag.Title = "Categoria Estabelecimentos";
    //Formatação mensagem de busca e paginação
    string textoBusca = (ViewBag.Busca == null) ? "." : string.Format(" com o termo \"{0}\".", ViewBag.Busca);
    string textoPaginacao = (Model.TotalItemCount > 1) ? string.Format("{0} {1}{2}", Model.TotalItemCount, ViewBag.Title.ToString().ToLower(), textoBusca) : string.Format("{0} {1}{2}", Model.TotalItemCount, controllerName.ToLower(), textoBusca);
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- page start-->
<div class="row">
    <div class="col-lg-12">
        <!--breadcrumbs start -->
        <ul class="breadcrumb">
            <li><a href="@ConfigurationManager.AppSettings["BaseUrl"]/"><i class="fa fa-home"></i> Home</a></li>
            <li class="active">@ViewBag.Title</li>
        </ul>
        <!--breadcrumbs end -->
    </div>
</div>

<div class="row">
    <div class="col-lg-12">
        <section class="panel">
            <header class="panel-heading">
                <span class="pull-right">
                    <a href="@ConfigurationManager.AppSettings["BaseUrl"]/@controller/Create" class="btn btn-xs btn-primary"><i class="fa fa-plus"></i> Adicionar @controller</a>
                </span>
                @ViewBag.Title
            </header>

            <div class="panel-body">

                <div class="table-responsive">
                    @if (Model.Count > 0)
                    {
                        <table class="table table-bordered table-striped">
                            <thead>
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Nome)</th>
                                    <th width="120">@Html.DisplayNameFor(model => model.FirstOrDefault().Status)</th>
                                    <th width="80"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    string ativo = (item.Status) ? "checked" : "";
                                    <tr>
                                        <td>@Html.DisplayFor(modelItem => item.Nome)</td>
                                        <td>
                                            <div class="make-switch switch-mini" id="toggle-@item.IDCategoria" data-nome="@item.Nome" data-on="success" data-off="danger" data-on-label="SIM" data-off-label="NÃO">
                                                <input type="checkbox" @ativo class="" data-toggle="switch">
                                            </div>
                                        </td>
                                        <td>
                                            <a href="@ConfigurationManager.AppSettings["BaseUrl"]/@controller/Edit/@item.IDCategoria" data-toggle="tooltip"
                                               class="btn btn-xs btn-primary tooltips" data-original-title="Editar"><i class="fa fa-pencil"></i></a>

                                            <a href="" data-toggle="modal" data-target=".modal" class="btn btn-xs btn-danger tooltips" data-item="@item.Nome"
                                               id="btn-excluir-@item.IDCategoria" data-original-title="Excluir"><i class="fa fa-trash"></i></a>


                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>

                        <div class="">
                            <span class="pull-right mt10">
                                Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount. Total de @textoPaginacao
                            </span>
                            @Html.PagedListPager(Model, p => Url.Action("Index", new { p, b = ViewBag.Busca, i = "50" }))
                        </div>
                    }
                    else
                    {
                        <h3>@string.Concat("Nenhum ", controllerName.ToLower(), " encontrado", textoBusca)</h3>
                    }
                </div>
            </div>
        </section>
    </div>
</div>
<!-- page end-->

<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-modal-red">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="modal-title"><i class="fa fa-warning"></i> Exclusão de @controllerName <i class="fa fa-warning"></i></h4>
            </div>
            <div class="modal-body">
                <p>Atenção! Você realmente deseja excluir o @controllerName.ToLower() <b>"<span id="spanDataDelete"></span>"</b>?</p>
                <p>Esta ação é irreversível no sistema.</p>
            </div>
            <div class="modal-footer">
                <button data-dismiss="modal" class="btn btn-default" type="button">Cancelar</button>
                <button class="btn btn-danger" type="button" data-controller="@controllerName" data-label="@controllerLabel" data-id="" id="btn-confirm-delete">Excluir</button>
            </div>
        </div>
    </div>
</div>

@Html.AntiForgeryToken()

@section scripts{
    <script src="@ConfigurationManager.AppSettings["BaseUrl"]/assets/bootstrap-switch/static/js/bootstrap-switch.js" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $("[data-toggle='switch']").bootstrapSwitch();

            $(".make-switch").on('switch-change', function (e, data) {
                var ativo = data.value;
                var token = $('input[name="__RequestVerificationToken"]').val();
                var ID = $(this).attr("id").replace("toggle-", "");
                var Nome = $(this).data("nome");

                $.post("@ConfigurationManager.AppSettings["BaseUrl"]/@controller/Ativo", { __RequestVerificationToken: token, "id": ID, "ativo": ativo }, function (result) {
                    if (ativo == true) {
                        var $toast = toastr["success"]("O @controller.ToLower() \"" + Nome + "\" está com sua visualização disponível no sistema!", "@controllerName");
                    } else {
                        var $toast = toastr["success"]("O @controller.ToLower() \"" + Nome + "\" está com sua visualização indisponível no sistema!", "@controllerName");
                    }
                });
            });

            if ("@TempData["MensagemRetorno"]" != "") {
                var $toast = toastr["@TempData["MensagemTipo"]"]("@TempData["MensagemRetorno"]", "@controllerName");
            }
        });
    </script>
}