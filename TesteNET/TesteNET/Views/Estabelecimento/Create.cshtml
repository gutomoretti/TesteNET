@model TesteNET.Models.Estabelecimento
@using System.Configuration

@{
    //Controller da Página
    string controller = HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString();
    //Título da Página
    ViewBag.Title = "Novo Estabelecimento";
    //Label do controller
    string controllerLabel = "Estabelecimentos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-lg-12">
        <!--breadcrumbs start -->
        <ul class="breadcrumb">
            <li><a href="~/"><i class="fa fa-home"></i> Home</a></li>
            <li><a href="~/@controller">@controllerLabel</a></li>
            <li class="active">Adicionar</li>
        </ul>
        <!--breadcrumbs end -->
    </div>
</div>

<section class="panel">
    <header class="panel-heading">
        @ViewBag.Title
        <span class="pull-right">
            <a href="~/@controller" class="btn btn-xs btn-primary"><i class="fa fa-arrow-left"></i> Voltar</a>
        </span>
    </header>
    <div class="panel-body">
        @using (Html.BeginForm("Create", controller, FormMethod.Post, new { @id = "general-form", @class = "form-horizontal" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.IDCategoria, "Categoria", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("IDCategoria", null, "-- Selecione", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IDCategoria, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RazaoSocial, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RazaoSocial, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RazaoSocial, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NomeFantasia, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NomeFantasia, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NomeFantasia, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CNPJ, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CNPJ, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CNPJ, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Endereco, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Endereco, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IDEstado, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownList("IDEstado", null, "-- Selecione", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IDEstado, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.IDCidade, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownList("IDCidade", null, "-- Selecione", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IDCidade, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
                </div>
            </div>
           
            <div class="form-group">
                <div class="col-md-12 text-center">
                    <button id="btnAdicionarForm" type="submit" class="btn btn-success">Adicionar</button>
                </div>
            </div>
        }
    </div>
</section>

@section scripts {
    <script src="@ConfigurationManager.AppSettings["BaseUrl"]/Scripts/jquery.maskedinput.min.js" type="text/javascript"></script>
    <script type="text/javascript">
        $("#CNPJ").mask("99.999.999/9999-99");
        $("#Telefone").mask("(99) 9999-9999?9").focusout(function () {
            var phone, element;
            element = $(this);
            element.unmask();
            phone = element.val().replace(/\D/g, '');
            if (phone.length > 10) {
                element.mask("(99) 99999-999?9");
            } else {
                element.mask("(99) 9999-9999?9");
            }
        }).trigger('focusout');

        $("#IDEstado").change(function () {
            var selectedItem = $(this).val();
            $("#IDCidade").html("");
            $("#IDCidade").append($('<option></option>').val('').html('Carregando...'));
            $.ajax({
                cache: false,
                type: "POST",
                url: "@ConfigurationManager.AppSettings["BaseURL"]/@controller/SelecionarCidadesPorEstado",
                data: { "IDEstado": selectedItem },
                success: function (data) {
                    $("#IDCidade").html("");
                    $.each(data, function (id, option) {
                        $("#IDCidade").append($('<option></option>').val(option.IDCidade).html(option.Nome));
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Nao foi possivel carregar as cidades.');
                }
            });
        });
    </script>
}